{"ast":null,"code":"export const quizInitialState = {\n  allQuizzes: null,\n  currentQuiz: null,\n  quizId: \"\",\n  questionNo: 0,\n  score: 0,\n  isClickEnabled: true\n};\nexport function quizReducer(state, action) {\n  var _state$allQuizzes, _state$currentQuiz;\n\n  switch (action.type) {\n    case \"RESET_STATE\":\n      //console.log(\"qis\",quizInitialState);\n      return { ...quizInitialState,\n        allQuizzes: state.allQuizzes\n      };\n\n    case \"INITIALIZE_ALL_QUIZZES\":\n      //console.log(action.payload);\n      return { ...state,\n        allQuizzes: action.payload.allQuizzes\n      };\n\n    case \"INITIALIZE_CURRENT_QUIZ\":\n      const {\n        quizId\n      } = action.payload; //console.log(quizId)\n\n      const selectedQuiz = (_state$allQuizzes = state.allQuizzes) === null || _state$allQuizzes === void 0 ? void 0 : _state$allQuizzes.find(quiz => quiz.id === quizId); //console.log(\"selectedQuiz\",selectedQuiz);\n\n      selectedQuiz.questions.forEach(question => question.selectedOptionId = null);\n      return { ...state,\n        currentQuiz: selectedQuiz\n      };\n\n    case \"SET_SELECTED_OPTION_ID\":\n      console.log(\"SET_SELECTED_OPTION_ID\", action.payload);\n      const {\n        optionId,\n        questionId\n      } = action.payload;\n      return { ...state,\n        currentQuiz: { ...state.currentQuiz,\n          questions: (_state$currentQuiz = state.currentQuiz) === null || _state$currentQuiz === void 0 ? void 0 : _state$currentQuiz.questions.map(question => {\n            return question.id === questionId ? { ...question,\n              selectedOptionId: optionId\n            } : question;\n          })\n        }\n      };\n\n    case \"INCREMENT_SCORE\":\n      //console.log(action.payload);\n      return { ...state,\n        score: state.score + action.payload.score\n      };\n\n    case \"INCREMENT_QUESTION_NO\":\n      return { ...state,\n        questionNo: state.questionNo + 1\n      };\n\n    case \"SET_QUIZ_ID\":\n      return { ...state,\n        quizId: action.payload.quizId\n      };\n\n    case \"ENABLE_CLICK\":\n      return { ...state,\n        isClickEnabled: true\n      };\n\n    case \"DISABLE_CLICK\":\n      return { ...state,\n        isClickEnabled: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Quiz-App/quiz-app/src/Reducer/QuizReducer.ts"],"names":["quizInitialState","allQuizzes","currentQuiz","quizId","questionNo","score","isClickEnabled","quizReducer","state","action","type","payload","selectedQuiz","find","quiz","id","questions","forEach","question","selectedOptionId","console","log","optionId","questionId","map"],"mappings":"AAGA,OAAO,MAAMA,gBAAoC,GAAG;AAClDC,EAAAA,UAAU,EAAC,IADuC;AAElDC,EAAAA,WAAW,EAAC,IAFsC;AAGlDC,EAAAA,MAAM,EAAC,EAH2C;AAIlDC,EAAAA,UAAU,EAAC,CAJuC;AAKlDC,EAAAA,KAAK,EAAC,CAL4C;AAMlDC,EAAAA,cAAc,EAAC;AANmC,CAA7C;AASP,OAAO,SAASC,WAAT,CAAuBC,KAAvB,EAAkDC,MAAlD,EAAsF;AAAA;;AAC3F,UAAOA,MAAM,CAACC,IAAd;AAEE,SAAK,aAAL;AACE;AACA,aAAO,EACL,GAAGV,gBADE;AAELC,QAAAA,UAAU,EAAEO,KAAK,CAACP;AAFb,OAAP;;AAKF,SAAK,wBAAL;AACE;AACA,aAAO,EACL,GAAGO,KADE;AAELP,QAAAA,UAAU,EAAEQ,MAAM,CAACE,OAAP,CAAeV;AAFtB,OAAP;;AAKF,SAAK,yBAAL;AACE,YAAM;AAAEE,QAAAA;AAAF,UAAaM,MAAM,CAACE,OAA1B,CADF,CAEE;;AACA,YAAMC,YAAY,wBAAGJ,KAAK,CAACP,UAAT,sDAAG,kBAAkBY,IAAlB,CAAwBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYZ,MAA7C,CAArB,CAHF,CAIE;;AACAS,MAAAA,YAAY,CAACI,SAAb,CAAuBC,OAAvB,CAAgCC,QAAD,IAAeA,QAAQ,CAACC,gBAAT,GAA4B,IAA1E;AACA,aAAO,EACL,GAAGX,KADE;AAELN,QAAAA,WAAW,EAAEU;AAFR,OAAP;;AAKF,SAAK,wBAAL;AACEQ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCZ,MAAM,CAACE,OAA5C;AACA,YAAM;AAAEW,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAA2Bd,MAAM,CAACE,OAAxC;AACA,aAAO,EACL,GAAGH,KADE;AAELN,QAAAA,WAAW,EAAE,EACX,GAAGM,KAAK,CAACN,WADE;AAEXc,UAAAA,SAAS,wBAAER,KAAK,CAACN,WAAR,uDAAE,mBAAmBc,SAAnB,CAA6BQ,GAA7B,CAAkCN,QAAD,IAAc;AACxD,mBAAOA,QAAQ,CAACH,EAAT,KAAgBQ,UAAhB,GACH,EACE,GAAGL,QADL;AAEEC,cAAAA,gBAAgB,EAAEG;AAFpB,aADG,GAKHJ,QALJ;AAMD,WAPU;AAFA;AAFR,OAAP;;AAeF,SAAK,iBAAL;AACE;AACA,aAAO,EACL,GAAGV,KADE;AAELH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACE,OAAP,CAAeN;AAF/B,OAAP;;AAKF,SAAK,uBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELJ,QAAAA,UAAU,EAAEI,KAAK,CAACJ,UAAN,GAAmB;AAF1B,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELL,QAAAA,MAAM,EAAEM,MAAM,CAACE,OAAP,CAAeR;AAFlB,OAAP;;AAKF,SAAK,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAKF,SAAK,eAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,cAAc,EAAE;AAFX,OAAP;;AAKF;AAAS,aAAOE,KAAP;AA5EX;AA8ED","sourcesContent":["import { QUIZ_INITIAL_STATE, ACTION } from \"./QuizReducerType\";\r\nimport { Quiz } from \"../Data/DataType\";\r\n\r\nexport const quizInitialState: QUIZ_INITIAL_STATE = {\r\n  allQuizzes:null,\r\n  currentQuiz:null,\r\n  quizId:\"\",\r\n  questionNo:0,\r\n  score:0,\r\n  isClickEnabled:true\r\n};\r\n\r\nexport function quizReducer ( state: QUIZ_INITIAL_STATE, action:ACTION) : QUIZ_INITIAL_STATE {\r\n  switch(action.type) {\r\n  \r\n    case \"RESET_STATE\":\r\n      //console.log(\"qis\",quizInitialState);\r\n      return {\r\n        ...quizInitialState,\r\n        allQuizzes: state.allQuizzes,\r\n      };\r\n\r\n    case \"INITIALIZE_ALL_QUIZZES\":\r\n      //console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        allQuizzes: action.payload.allQuizzes\r\n      }\r\n\r\n    case \"INITIALIZE_CURRENT_QUIZ\":\r\n      const { quizId } = action.payload;\r\n      //console.log(quizId)\r\n      const selectedQuiz = state.allQuizzes?.find((quiz) => quiz.id === quizId) as Quiz;\r\n      //console.log(\"selectedQuiz\",selectedQuiz);\r\n      selectedQuiz.questions.forEach((question) => (question.selectedOptionId = null));\r\n      return {\r\n        ...state,\r\n        currentQuiz: selectedQuiz,\r\n      };\r\n    \r\n    case \"SET_SELECTED_OPTION_ID\":\r\n      console.log(\"SET_SELECTED_OPTION_ID\",action.payload);\r\n      const { optionId, questionId } = action.payload;\r\n      return {\r\n        ...state,\r\n        currentQuiz: {\r\n          ...state.currentQuiz,\r\n          questions: state.currentQuiz?.questions.map((question) => {\r\n            return question.id === questionId\r\n              ? {\r\n                  ...question,\r\n                  selectedOptionId: optionId,\r\n                }\r\n              : question;\r\n          }),\r\n        } as Quiz,\r\n      };\r\n\r\n    case \"INCREMENT_SCORE\":\r\n      //console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        score: state.score + action.payload.score,\r\n      };\r\n\r\n    case \"INCREMENT_QUESTION_NO\":\r\n      return {\r\n        ...state,\r\n        questionNo: state.questionNo + 1,\r\n      };\r\n\r\n    case \"SET_QUIZ_ID\":\r\n      return {\r\n        ...state,\r\n        quizId: action.payload.quizId,\r\n      };\r\n\r\n    case \"ENABLE_CLICK\":\r\n      return {\r\n        ...state,\r\n        isClickEnabled: true,\r\n      };\r\n\r\n    case \"DISABLE_CLICK\":\r\n      return {\r\n        ...state,\r\n        isClickEnabled: false,\r\n      };\r\n\r\n    default: return state;\r\n  }\r\n}\r\n  "]},"metadata":{},"sourceType":"module"}